package com.example.choreapp.activity

//import android.app.widget.ProgressBar
import android.app.ProgressDialog
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.text.TextUtils
import android.util.Log
import android.widget.LinearLayout
import android.widget.Toast
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.example.choreapp.R
import com.example.choreapp.db.ChoreDBHandler
import com.example.choreapp.db.ChoreListAdapter
import com.example.choreapp.model.Chore
import kotlinx.android.synthetic.main.activity_chore_list.*
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {
    var dbHandler: ChoreDBHandler? = null
    var progressDialog: ProgressDialog? = null




    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        progressDialog = ProgressDialog(this)
        dbHandler = ChoreDBHandler(this)








        saveChore.setOnClickListener {
            progressDialog!!.setMessage("saving ... ")
            progressDialog!!.show()
            if (!TextUtils.isEmpty(enterChoreId.text.toString())
                    && !TextUtils.isEmpty(assignTold.text.toString())
                    && !TextUtils.isEmpty(assignedById.text.toString())) {
                // save to database
                var chore = Chore()
                chore.name = enterChoreId.text.toString()
                chore.assignedTo= assignTold.text.toString()
                chore.assignedBy = assignedById.text.toString()
                saveToDB(chore)
                progressDialog!!.cancel()
                startActivity(Intent(this, choreListActivity:: class.java))
            } else {
                Toast.makeText(this, "Please enter a chore", Toast.LENGTH_LONG).show()
            }
        }
    }




//        var chore = Chore("Clean Room","Carlos","James")
//
//        dbHandler!!.createChore(chore)
//
//        //Read from DB
//        var chores: Chore = dbHandler!!.readAChore(1)
//        Log.d("Item: ", chores.name.toString())

    fun saveToDB(chore: Chore){
        dbHandler!!.createChore(chore)
    }
}
